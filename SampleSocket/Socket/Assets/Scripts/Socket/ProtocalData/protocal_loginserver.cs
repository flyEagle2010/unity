// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocal_loginserver.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from protocal_loginserver.proto</summary>
public static partial class ProtocalLoginserverReflection {

	#region Descriptor
	/// <summary>File descriptor for protocal_loginserver.proto</summary>
	public static pbr::FileDescriptor Descriptor {
		get { return descriptor; }
	}
	private static pbr::FileDescriptor descriptor;

	static ProtocalLoginserverReflection() {
		byte[] descriptorData = global::System.Convert.FromBase64String(
			string.Concat(
				"Chpwcm90b2NhbF9sb2dpbnNlcnZlci5wcm90byIzCg5DU19MT0dJTlNFUlZF",
				"UhIPCgdhY2NvdW50GAEgASgJEhAKCHBhc3N3b3JkGAIgASgJYgZwcm90bzM="));
		descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
			new pbr::FileDescriptor[] { },
			new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
				new pbr::GeneratedClrTypeInfo(typeof(global::CS_LOGINSERVER), global::CS_LOGINSERVER.Parser, new[]{ "Account", "Password" }, null, null, null)
			}));
	}
	#endregion

}
#region Messages
public sealed partial class CS_LOGINSERVER : pb::IMessage<CS_LOGINSERVER> {
	private static readonly pb::MessageParser<CS_LOGINSERVER> _parser = new pb::MessageParser<CS_LOGINSERVER>(() => new CS_LOGINSERVER());
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute]
	public static pb::MessageParser<CS_LOGINSERVER> Parser { get { return _parser; } }

	[global::System.Diagnostics.DebuggerNonUserCodeAttribute]
	public static pbr::MessageDescriptor Descriptor {
		get { return global::ProtocalLoginserverReflection.Descriptor.MessageTypes[0]; }
	}

	[global::System.Diagnostics.DebuggerNonUserCodeAttribute]
	pbr::MessageDescriptor pb::IMessage.Descriptor {
		get { return Descriptor; }
	}

	[global::System.Diagnostics.DebuggerNonUserCodeAttribute]
	public CS_LOGINSERVER() {
		OnConstruction();
	}

	partial void OnConstruction();

	[global::System.Diagnostics.DebuggerNonUserCodeAttribute]
	public CS_LOGINSERVER(CS_LOGINSERVER other) : this() {
		account_ = other.account_;
		password_ = other.password_;
	}

	[global::System.Diagnostics.DebuggerNonUserCodeAttribute]
	public CS_LOGINSERVER Clone() {
		return new CS_LOGINSERVER(this);
	}

	/// <summary>Field number for the "account" field.</summary>
	public const int AccountFieldNumber = 1;
	private string account_ = "";
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute]
	public string Account {
		get { return account_; }
		set {
			account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
		}
	}

	/// <summary>Field number for the "password" field.</summary>
	public const int PasswordFieldNumber = 2;
	private string password_ = "";
	[global::System.Diagnostics.DebuggerNonUserCodeAttribute]
	public string Password {
		get { return password_; }
		set {
			password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
		}
	}

	[global::System.Diagnostics.DebuggerNonUserCodeAttribute]
	public override bool Equals(object other) {
		return Equals(other as CS_LOGINSERVER);
	}

	[global::System.Diagnostics.DebuggerNonUserCodeAttribute]
	public bool Equals(CS_LOGINSERVER other) {
		if (ReferenceEquals(other, null)) {
			return false;
		}
		if (ReferenceEquals(other, this)) {
			return true;
		}
		if (Account != other.Account) return false;
		if (Password != other.Password) return false;
		return true;
	}

	[global::System.Diagnostics.DebuggerNonUserCodeAttribute]
	public override int GetHashCode() {
		int hash = 1;
		if (Account.Length != 0) hash ^= Account.GetHashCode();
		if (Password.Length != 0) hash ^= Password.GetHashCode();
		return hash;
	}

	[global::System.Diagnostics.DebuggerNonUserCodeAttribute]
	public override string ToString() {
		return pb::JsonFormatter.ToDiagnosticString(this);
	}

	[global::System.Diagnostics.DebuggerNonUserCodeAttribute]
	public void WriteTo(pb::CodedOutputStream output) {
		if (Account.Length != 0) {
			output.WriteRawTag(10);
			output.WriteString(Account);
		}
		if (Password.Length != 0) {
			output.WriteRawTag(18);
			output.WriteString(Password);
		}
	}

	[global::System.Diagnostics.DebuggerNonUserCodeAttribute]
	public int CalculateSize() {
		int size = 0;
		if (Account.Length != 0) {
			size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
		}
		if (Password.Length != 0) {
			size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
		}
		return size;
	}

	[global::System.Diagnostics.DebuggerNonUserCodeAttribute]
	public void MergeFrom(CS_LOGINSERVER other) {
		if (other == null) {
			return;
		}
		if (other.Account.Length != 0) {
			Account = other.Account;
		}
		if (other.Password.Length != 0) {
			Password = other.Password;
		}
	}

	[global::System.Diagnostics.DebuggerNonUserCodeAttribute]
	public void MergeFrom(pb::CodedInputStream input) {
		uint tag;
		while ((tag = input.ReadTag()) != 0) {
			switch(tag) {
			default:
				input.SkipLastField();
				break;
			case 10: {
					Account = input.ReadString();
					break;
				}
			case 18: {
					Password = input.ReadString();
					break;
				}
			}
		}
	}

}

#endregion


#endregion Designer generated code
